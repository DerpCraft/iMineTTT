package me.itidez.plugins.minettt;

public class ErrorLogger {
        private Player player;
        private boolean isMultiplePlayers = false;
        private Player[] players;
        private Target target;
        
        public ErrorLogger() {
            super(null, Target.CONSOLE);
        }
        
        public ErrorLogger(Player p) {
            super(p, Target.CONSOLE);
        }
        
        public ErrorLogger(Target t) {
        super(null, t);
    }
        
    public ErrorLogger(Player p, Target t) {
        this.player = p;
        this.target = t;
        if(t == Target.PLAYER) {
            this.player = null;
            this.isMultiplePlayers = true;
            Player[] ps = Bukkit.getServer().getOnlinePlayers();
            int i = 0;
            String names = null;
            for(Player op : ps) {
                if(op.isOp()) {
                    players[i] = op;
                    names = names + op.getName();
                    i++;
                }
            }
            Iminettt.debug("Players in ErrorLogger's OP List: "+names);
        }
        Iminettt.debug("ErrorLogger - Defined Player: "+player+" Defined Target: "+target);
    }
        
    public void sendError() {
        switch(target) {
            case 1:
                target.sendError(player);
            break;
            case 2:
                target.sendError();
            break;
            case 3:
                if (isMultiplePlayers == true) {
                    for(Player op : players) {
                        target.sendError(op);
                    }
                } else {
                    target.sendError(op);
                }
            break;
            case 4:
                target.sendError();
            break;
            default:
            break;
        }
    }
}
    
public enum Target {
    GLOBAL(1) {
        @Override
        public void sendError(Player p) {
            Iminettt.log("");
        }
    },
    CONSOLE(2) {
        @Override
        public void sendError() {
                
        }
    },
    PLAYER(3){
        @Override
        public void sendError(Player p) {
                
        }
    },
    BROADCAST(4){
        @Override
        public void sendError() {
                
        }
    };
        
    private int value;
    public abstract sendError();
        
    private Target(int value) {
        this.value = value;
    }
}